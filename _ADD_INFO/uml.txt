

Model
+ conf: IConf
- changeMode: boolean
- startConf: IConf
- backEndConf: IConf
- methods: Imethods
- data: Idata
- onStart: Function | null
- onUpdate: Function | null
- onChange: Function | null
- noCalVal: boolean
	------------------------------
+ getConf( IConf): IConf
+ start(): void
+ getData(): IConf
+ update(IConf): IConf & Idata
+ calcPos(string, number,number,number,number,number,number,number,string): string | number
+ calcPosKey(string, boolean, string): string | number | {string, number}
- checkConf(IConf): conf: IConf
- findChangedConf(IConf, IConf):methods: Imethods
- async switchVertical(): void
- async switchRange(): void
- async updateControlPos(): void
- switchScale(): void
- switchBar(): void
- switchTip(): void
- setSticky(number): number
- calcFromPosition(): void
- calcToPosition(): void
- calcBar(): void
- calcScale(): void
- calcVal(string, number, string): void
	================================

	Controller
+ model: Model;
+ view: View;
- enabled: boolean;


-----------------------------------

+ update(IConf): void
+ getData(): IConf
+ disable(): void
+ enable(): void
+ destroy(): void
- init(): void
- createListeners(): void
- removeListeners(): void
- handleFromPosition: (IFireParms) => void
- handleToPosition: (IFireParms) => void
- handleFromValue: (IFireParms) => void
- handleToValue: (IFireParms) => void
- handleScale: (IFireParms) => void
- handleBar: (IFireParms) => void
- handleIsVertical: (IFireParms) => void
- handleIsRange: (IFireParms) => void
- handleIsScale: (IFireParms) => void
- handleIsBar: (IFireParms) => void
- handleIsTip: (IFireParms) => void
- handleMoveEvent: (IFireParms) => void
- handleKeydownEvent: (IFireParms) => void

	================================
View

+ viewControl: ViewControl
+ viewScale: ViewScale
+ viewBar: ViewBar
+ backEndConf: IConf
- root: HTMLElement
- track: HTMLElement
- frame: HTMLElement
- conf: IConf

---------------------------------
+ init(IConf): void
+ disable(): void
+ enable(): void
+ updateFromPos(Idata, IConf): void
+ updateToPos(Idata, IConf): void
+ updateFromVal(Idata): void
+ updateToVal(Idata): void
+ updateScale(Idata, IConf): void
+ updateBar(Idata, IConf): void
+ switchVertical(IConf): void
+ switchRange(IConf): void
+ switchScale(IConf): void
+ switchBar(IConf): void
+ switchTip(IConf): void
- render(): void
- collectParms(): void
- createSubViews(): void
- createListeners(): void
- handleMoveEvent: (IFireParms) => void
- handleKeydownEvent: (IFireParms) => void

================================

ViewScale

- slider: HTMLElement
- startWidth: number = 0
- track: HTMLElement
- markList: HTMLElement[]
- conf: IConf
- lastLabelRemoved: boolean
- scaleMarks: {number, number }[]
- calcMarkList: boolean

	--------------------------------
+ createScale({number, number }[], IConf): Function(HTMLElement[])
+ switchScale(IConf): NodeListOf<Element>
- checkScaleLength(HTMLElement[]):  HTMLElement[]
- addLastLabel(boolean): void
- resize(): void

			================================

	ViewControl
+ controlMin: HTMLElement
+ controlMax: HTMLElement
+ tipMin: HTMLInputElement
+ tipMax: HTMLInputElement
+ track: HTMLInputElement
- conf: IConf
- slider: HTMLElement
- root: HTMLInputElement
- data: Idata
- initDone: boolean
	-------------------------------
+ updatePos(HTMLElement, number): void
+ updateVal(string, boolean): void
+ updateInput(conf: IConf): void
+ switchVertical(conf: IConf): void
+ switchRange(conf: IConf): void
+ switchTip(conf: IConf): void
- init(conf: IConf): void
- renderControl(string, string, number): HTMLButtonElement
- renderLeftControl(): void
- renderRightControl(): void
- getMetrics(HTMLElement)
- dragControlMouse(): void
- dragControlTouch(): void
- pressControl(): void
- clickTrack(): void
- calcTipPos(boolean, HTMLElement): string
- defineControl: (HTMLElement) => void

======================================
Bar

- slider: HTMLElement
- track: HTMLElement
- elem: HTMLElement;
- progressBar: HTMLElement
- controlMin: HTMLElement
- controlMax: HTMLElement
- controlMinDist: number
- controlMaxDist: number
- markList: HTMLElement[]
- conf: IConf
- scale: HTMLElement
- checkNext: boolean
- lastLabelRemoved: boolean
	---------------------------------

+ switchVertical(IConf): void
+ switchBar(IConf)
+ updateBar(number, number, boolean): void
- init(IConf): void
- renderBar(IConf): void

	======================================

	Observer
- observers: Function[]

+ subscribe(Function):Function[] | boolean
+ unsubscribe(Function):Function[]
# fire(string, data: Idata, conf: IConf): void