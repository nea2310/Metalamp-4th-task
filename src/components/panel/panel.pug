include ../input-field/input-field.pug
include ../toggle/toggle.pug
include ../radiobuttons/radiobuttons.pug
mixin panel(options={})
	-
		let elemName='panel'
		let modif = options.vertical=='true'?' vert':''
	div(class = elemName + modif)
		fieldset(class = elemName + '__mainSetup')
			legend Main
			div(class = 'min')
				+input(
										{width: 'narrow',
										labelText: 'min'} 
										)
			div(class = 'max')
				+input(
										{width: 'narrow',
										labelText: 'max'} 
										)
			div(class = 'from')
				+input(
										{width: 'narrow',
										labelText: 'from'} 
										)
			div(class = 'to')
				+input(
										{width: 'narrow',
										labelText: 'to'} 
										)
			div(class = 'vertical')
				+toggle(
										{name: 'vertical'}
										)
			div(class = 'range')
				+toggle(
										{name: 'range'}
										)
			div(class = 'bar')
				+toggle(
										{name: 'bar'}
										)
			div(class = 'tip')
				+toggle(
										{name: 'tip'}
										)
		fieldset(class = elemName + '__scaleSetup')
			legend Scale
			div(class = 'scale')
				+toggle(
										{name: 'scale'}
										)
			span scale base
			div(class = 'scaleBase')
				+radiobuttons({categories:
								{cat1: {name:'step'}, 
								cat2:{name:'interval'}},
								radioGroupName: options.radioGroupName})
			div(class = 'IntervalStep')
				div(class = 'step')
					+input(
											{width: 'narrow',
											labelText: 'step'} 
											)
				div(class = 'interval')
					+input(
											{width: 'narrow',
											labelText: 'interval'} 
											)
		fieldset(class = elemName + '__moveSetup')
			legend Control movement
			div(class = 'sticky')
				+toggle(
										{name: 'sticky'}
										)
			div(class = 'shiftOnKeyDown')
				+input(
										{width: 'narrow',
										labelText: 'shift on key down'} 
										)
			div(class = 'shiftOnKeyHold')
				+input(
										{width: 'narrow',
										labelText: 'shift on key hold'} 
										)
		button(class = 'apply') Применить
		button(class = 'destroy') Destroy


